//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegistrationWeb.Client.RegistrationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegistrationServiceReference.IRegistrationService")]
    public interface IRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetStudents", ReplyAction="http://tempuri.org/IRegistrationService/GetStudentsResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetStudents", ReplyAction="http://tempuri.org/IRegistrationService/GetStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCourses", ReplyAction="http://tempuri.org/IRegistrationService/GetCoursesResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[] GetCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCourses", ReplyAction="http://tempuri.org/IRegistrationService/GetCoursesResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[]> GetCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetStudentEnrollments", ReplyAction="http://tempuri.org/IRegistrationService/GetStudentEnrollmentsResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.Course[] GetStudentEnrollments(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetStudentEnrollments", ReplyAction="http://tempuri.org/IRegistrationService/GetStudentEnrollmentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.Course[]> GetStudentEnrollmentsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCourseEnrollments", ReplyAction="http://tempuri.org/IRegistrationService/GetCourseEnrollmentsResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.Student[] GetCourseEnrollments(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCourseEnrollments", ReplyAction="http://tempuri.org/IRegistrationService/GetCourseEnrollmentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.Student[]> GetCourseEnrollmentsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/InsertStudent", ReplyAction="http://tempuri.org/IRegistrationService/InsertStudentResponse")]
        bool InsertStudent(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/InsertStudent", ReplyAction="http://tempuri.org/IRegistrationService/InsertStudentResponse")]
        System.Threading.Tasks.Task<bool> InsertStudentAsync(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/InsertCourse", ReplyAction="http://tempuri.org/IRegistrationService/InsertCourseResponse")]
        bool InsertCourse(RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/InsertCourse", ReplyAction="http://tempuri.org/IRegistrationService/InsertCourseResponse")]
        System.Threading.Tasks.Task<bool> InsertCourseAsync(RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/InsertEnrollment", ReplyAction="http://tempuri.org/IRegistrationService/InsertEnrollmentResponse")]
        bool InsertEnrollment(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/InsertEnrollment", ReplyAction="http://tempuri.org/IRegistrationService/InsertEnrollmentResponse")]
        System.Threading.Tasks.Task<bool> InsertEnrollmentAsync(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetProfessors", ReplyAction="http://tempuri.org/IRegistrationService/GetProfessorsResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.ProfessorDAO[] GetProfessors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetProfessors", ReplyAction="http://tempuri.org/IRegistrationService/GetProfessorsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.ProfessorDAO[]> GetProfessorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetBuildings", ReplyAction="http://tempuri.org/IRegistrationService/GetBuildingsResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.BuildingDAO[] GetBuildings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetBuildings", ReplyAction="http://tempuri.org/IRegistrationService/GetBuildingsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.BuildingDAO[]> GetBuildingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetRooms", ReplyAction="http://tempuri.org/IRegistrationService/GetRoomsResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.RoomDAO[] GetRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetRooms", ReplyAction="http://tempuri.org/IRegistrationService/GetRoomsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.RoomDAO[]> GetRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetStudentByID", ReplyAction="http://tempuri.org/IRegistrationService/GetStudentByIDResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[] GetStudentByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetStudentByID", ReplyAction="http://tempuri.org/IRegistrationService/GetStudentByIDResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[]> GetStudentByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCourseByID", ReplyAction="http://tempuri.org/IRegistrationService/GetCourseByIDResponse")]
        RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[] GetCourseByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCourseByID", ReplyAction="http://tempuri.org/IRegistrationService/GetCourseByIDResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[]> GetCourseByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/DeleteStudent", ReplyAction="http://tempuri.org/IRegistrationService/DeleteStudentResponse")]
        bool DeleteStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/DeleteStudent", ReplyAction="http://tempuri.org/IRegistrationService/DeleteStudentResponse")]
        System.Threading.Tasks.Task<bool> DeleteStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/DeleteCourse", ReplyAction="http://tempuri.org/IRegistrationService/DeleteCourseResponse")]
        bool DeleteCourse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/DeleteCourse", ReplyAction="http://tempuri.org/IRegistrationService/DeleteCourseResponse")]
        System.Threading.Tasks.Task<bool> DeleteCourseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/DeleteEnrollment", ReplyAction="http://tempuri.org/IRegistrationService/DeleteEnrollmentResponse")]
        bool DeleteEnrollment(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/DeleteEnrollment", ReplyAction="http://tempuri.org/IRegistrationService/DeleteEnrollmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteEnrollmentAsync(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistrationServiceChannel : RegistrationWeb.Client.RegistrationServiceReference.IRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationServiceClient : System.ServiceModel.ClientBase<RegistrationWeb.Client.RegistrationServiceReference.IRegistrationService>, RegistrationWeb.Client.RegistrationServiceReference.IRegistrationService {
        
        public RegistrationServiceClient() {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[] GetCourses() {
            return base.Channel.GetCourses();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[]> GetCoursesAsync() {
            return base.Channel.GetCoursesAsync();
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.Course[] GetStudentEnrollments(int id) {
            return base.Channel.GetStudentEnrollments(id);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.Course[]> GetStudentEnrollmentsAsync(int id) {
            return base.Channel.GetStudentEnrollmentsAsync(id);
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.Student[] GetCourseEnrollments(int id) {
            return base.Channel.GetCourseEnrollments(id);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.Student[]> GetCourseEnrollmentsAsync(int id) {
            return base.Channel.GetCourseEnrollmentsAsync(id);
        }
        
        public bool InsertStudent(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student) {
            return base.Channel.InsertStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> InsertStudentAsync(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student) {
            return base.Channel.InsertStudentAsync(student);
        }
        
        public bool InsertCourse(RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course) {
            return base.Channel.InsertCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> InsertCourseAsync(RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course) {
            return base.Channel.InsertCourseAsync(course);
        }
        
        public bool InsertEnrollment(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course) {
            return base.Channel.InsertEnrollment(student, course);
        }
        
        public System.Threading.Tasks.Task<bool> InsertEnrollmentAsync(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course) {
            return base.Channel.InsertEnrollmentAsync(student, course);
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.ProfessorDAO[] GetProfessors() {
            return base.Channel.GetProfessors();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.ProfessorDAO[]> GetProfessorsAsync() {
            return base.Channel.GetProfessorsAsync();
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.BuildingDAO[] GetBuildings() {
            return base.Channel.GetBuildings();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.BuildingDAO[]> GetBuildingsAsync() {
            return base.Channel.GetBuildingsAsync();
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.RoomDAO[] GetRooms() {
            return base.Channel.GetRooms();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.RoomDAO[]> GetRoomsAsync() {
            return base.Channel.GetRoomsAsync();
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[] GetStudentByID(int id) {
            return base.Channel.GetStudentByID(id);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO[]> GetStudentByIDAsync(int id) {
            return base.Channel.GetStudentByIDAsync(id);
        }
        
        public RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[] GetCourseByID(int id) {
            return base.Channel.GetCourseByID(id);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO[]> GetCourseByIDAsync(int id) {
            return base.Channel.GetCourseByIDAsync(id);
        }
        
        public bool DeleteStudent(int id) {
            return base.Channel.DeleteStudent(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStudentAsync(int id) {
            return base.Channel.DeleteStudentAsync(id);
        }
        
        public bool DeleteCourse(int id) {
            return base.Channel.DeleteCourse(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCourseAsync(int id) {
            return base.Channel.DeleteCourseAsync(id);
        }
        
        public bool DeleteEnrollment(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course) {
            return base.Channel.DeleteEnrollment(student, course);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEnrollmentAsync(RegistrationWeb.Logic.RegistrationServiceReference.StudentDAO student, RegistrationWeb.Logic.RegistrationServiceReference.CourseDAO course) {
            return base.Channel.DeleteEnrollmentAsync(student, course);
        }
    }
}
